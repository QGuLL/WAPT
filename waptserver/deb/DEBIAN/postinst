#!/usr/bin/python

import subprocess
import os
import shutil
import sys
import ConfigParser
import time

subprocess.check_output('update-rc.d waptserver defaults',shell=True)
subprocess.check_output('touch  /var/log/waptserver.log',shell=True)
subprocess.check_output('touch  /var/run/waptserver.pid',shell=True)
subprocess.check_output('chown wapt:root /var/log/waptserver.log',shell=True)
subprocess.check_output('chown wapt:root  /var/run/waptserver.pid',shell=True)

# cleanup leftovers

for cleanup_dir in ('rpm','mongodb','spool','uninstall_service.bat'):
    mypath = os.path.join('/opt/wapt/waptserver',cleanup_dir)
    if os.path.exists(mypath):
        shutil.rmtree(mypath)


subprocess.check_output('chown wapt:root /opt/wapt/log',shell=True)

inifile = '/opt/wapt/waptserver/waptserver.ini'
if os.path.exists(inifile) and not os.path.islink(inifile):
    try:
        os.rename(inifile, '/opt/wapt/conf/waptserver.ini')
        os.symlink('../conf/waptserver.ini',inifile)
    except Exception:
        pass
subprocess.check_output('chown -R wapt:root /opt/wapt/conf',shell=True)
subprocess.check_output('chmod 644 /opt/wapt/conf/waptserver.ini',shell=True)

subprocess.check_output('chmod 755 /opt/wapt/waptserver/scripts/postconf.py', shell=True)

def cleanup_ini_file():
    CFG_PATH = "/opt/wapt/waptserver/waptserver.ini"

    if not os.path.exists(CFG_PATH):
        print "No config file found at " + CFG_PATH
        exit(0)

    try:
        cfg = ConfigParser.RawConfigParser()
        cfg.read(CFG_PATH)
        if not cfg.has_option("uwsgi", "enable-threads"):
            cfg.set("uwsgi", "enable-threads", "true")
            with open(CFG_PATH, 'wb') as out:
                cfg.write(out)
        if cfg.has_option("uwsgi","spooler"):
            cfg.remove_option('uwsgi','spooler')
    except Exception:
        import traceback
        print "Error when amending" + CFG_PATH
        traceback.print_exc()
        exit(0)

cleanup_ini_file()


def check_if_running():
    try:
        subprocess.check_output(['pgrep', '-f', 'waptserver'])
        return True
    except Exception:
        return False


# restart server if conf file is there and if it was already running
if os.path.exists('/opt/wapt/conf/waptserver.ini'): 
    if check_if_running()==True:
        subprocess.check_output('/etc/init.d/waptserver stop',shell=True)
        time.sleep(2)
        # XXX temporary: clean up leftover waptserver processes
        # due to broken /etc/init.d/waptserver script
        try:
            subprocess.check_output("pkill -INT -f '^/usr/bin/uwsgi-core.*wapt'",shell=True)
        except subprocess.CalledProcessError as e:
            print (e.returncode)
        subprocess.check_output('/etc/init.d/waptserver start',shell=True)
    else:
        subprocess.check_output('/etc/init.d/waptserver start',shell=True)
else:
    print (""" '\e[1;31m%-6s\e[m\n' "The installation of waptserver is finished!" """)
    print (""" '\e[1;31m%-6s\e[m\n' "For postconf please run: /usr/bin/python /opt/wapt/waptserver/scripts/postconf.py" """)


# Backward compat
agent='/var/www/wapt/waptagent.exe'
setup='/var/www/wapt/waptsetup.exe'
if os.path.exists(setup) and not os.path.islink(setup):
    print ('Moving regular file %s to %s.old for compatibility reasons.'% (setup,setup,))
    os.rename(setup,"%s.old" % setup)
    print ("Creating symlink from %s to %s for compatibility reasons." % (setup,agent))
    os.symlink(agent,setup)
sys.exit(0)
