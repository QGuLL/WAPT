#!/bin/sh

touch  /var/log/waptserver.log
touch  /var/run/waptserver.pid

chown wapt:root /var/log/waptserver.log
chown wapt:root  /var/run/waptserver.pid

# cleanup leftovers
for cleanup_dir in rpm mongodb spool uninstall_service.bat; do
    rm -Rf /opt/wapt/"$cleanup_dir"
done

for entry in /opt/wapt/*; do
    case $entry in
	/opt/wapt/log)
	    chown -R wapt:root "$entry"
	    ;;
	/opt/wapt/waptserver)
	    for subentry in /opt/wapt/waptserver/*; do
		case $subentry in
		    /opt/wapt/waptserver/waptserver.ini)
			chown wapt:root "$subentry"
			;;
		    *)
			chown -R root:root "$subentry"
			;;
		esac
	    done
	    ;;
	/opt/wapt/*)
	    chown -R root:root "$entry"
	    ;;
    esac
done


#cp /opt/wapt/waptserver/scripts/waptserver-init /etc/init.d/waptserver
#chmod +x /etc/init.d/waptserver

update-rc.d waptserver defaults

echo "Ensuring that enable-threads is present in waptserver.ini" >&2
tmpfile=$(mktemp)
cat > "$tmpfile" << 'EOF'
import os
import sys
import ConfigParser

CFG_PATH = "/opt/wapt/waptserver/waptserver.ini"

if not os.path.exists(CFG_PATH):
    print "No config file found at " + CFG_PATH
    exit(0)

try:
    cfg = ConfigParser.RawConfigParser()
    cfg.read(CFG_PATH)
    if not cfg.has_option("uwsgi", "enable-threads"):
        cfg.set("uwsgi", "enable-threads", "true")
        with open(CFG_PATH, 'wb') as out:
            cfg.write(out)
except Exception:
    import traceback
    print "Error when amending" + CFG_PATH
    traceback.print_exc()
    exit(0)
EOF
python "$tmpfile"
rm -f "$tmpfile"

if [ -f "/opt/wapt/waptserver/waptserver.ini" ]
then
  if ps aux | grep -q wapt
  then
    [ -f /etc/init.d/waptserver ] && /etc/init.d/waptserver stop
    # XXX temporary: clean up leftover waptserver processes
    # due to broken /etc/init.d/waptserver script
    pkill -INT -f '^/usr/bin/uwsgi-core.*wapt'
    [ -f /etc/init.d/waptserver ] && /etc/init.d/waptserver start
  else
    [ -f /etc/init.d/waptserver ] && /etc/init.d/waptserver start
  fi
else
    /usr/bin/printf '\e[1;31m%-6s\e[m\n' "The installation of waptserver is finished!"
    /usr/bin/printf '\e[1;31m%-6s\e[m\n' "For postconf please run: /usr/bin/python /opt/wapt/waptserver/scripts/postconf.py"
fi

# Backward compat
agent=/var/www/wapt/waptagent.exe
setup=/var/www/wapt/waptsetup.exe

if [ -e "$setup" ] && ! [ -L "$setup" ]; then
    echo "Moving regular file $setup to $setup.old for compatibility reasons." >&2
    mv -f "$setup" "$setup".old
fi

echo "Creating symlink from $setup to $agent for compatibility reasons." >&2
ln -sf "$agent" "$setup"

exit 0
